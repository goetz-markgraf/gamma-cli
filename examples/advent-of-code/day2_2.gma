let test-input =
    {
        "forward 5"
        "down 5"
        "forward 8"
        "up 3"
        "down 8"
        "forward 2"
    }

let calculate-position start list =
    let calc-movement cmd-line =
        let cmd-list = split cmd-line
        let cmd = first cmd-list
        let amount = last cmd-list

        when {
            cmd = "forward" -> {amount, (at 2 start * amount), 0}
            cmd = "up" -> {0, 0, neg amount}
            cmd = "down" -> {0, 0, amount}
            else -> {0, 0, 0}
        }

    when {
        is-empty? list -> start
        else -> (
            let movement = calc-movement (head list)
            let new-position =
                {
                    at 0 start + at 0 movement
                    at 1 start + at 1 movement
                    at 2 start + at 2 movement
                }
            calculate-position new-position (tail list)
        )
    }

let test-result = calculate-position {0, 0, 0} test-input

print ((at 0 test-result) * (at 1 test-result))

let result = read-lines "gamma-cli/examples/advent-of-code/day2.input" |> calculate-position {0, 0, 0}

(at 0 result) * (at 1 result)
